{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst useLogoutOnClose = () => {\n  _s();\n  // In your component or App.js file\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      // Set sessionStorage flag to indicate page refresh\n      if (!sessionStorage.getItem('isRefreshing')) {\n        // If not a refresh, clear localStorage\n        localStorage.removeItem('user');\n      }\n    };\n\n    // Listen for beforeunload event\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Set sessionStorage flag when the page is loaded\n    sessionStorage.setItem('isRefreshing', 'true');\n\n    // Clean up on component unmount or page load\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      sessionStorage.removeItem('isRefreshing');\n    };\n  }, []);\n};\n_s(useLogoutOnClose, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useLogoutOnClose;","map":{"version":3,"names":["useEffect","useLogoutOnClose","_s","handleBeforeUnload","event","sessionStorage","getItem","localStorage","removeItem","window","addEventListener","setItem","removeEventListener"],"sources":["C:/Users/Hp/Desktop/FAST/Software Engineering/Recipe Genie/Frontend/src/hooks/useLogoutOnClose.js"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nconst useLogoutOnClose = () => {\r\n // In your component or App.js file\r\nuseEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      // Set sessionStorage flag to indicate page refresh\r\n      if (!sessionStorage.getItem('isRefreshing')) {\r\n        // If not a refresh, clear localStorage\r\n        localStorage.removeItem('user');\r\n      }\r\n    };\r\n  \r\n    // Listen for beforeunload event\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n  \r\n    // Set sessionStorage flag when the page is loaded\r\n    sessionStorage.setItem('isRefreshing', 'true');\r\n  \r\n    // Clean up on component unmount or page load\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      sessionStorage.removeItem('isRefreshing');\r\n    };\r\n  }, []);\r\n  \r\n};\r\n\r\nexport default useLogoutOnClose;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACDF,SAAS,CAAC,MAAM;IACZ,MAAMG,kBAAkB,GAAIC,KAAK,IAAK;MACpC;MACA,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;QAC3C;QACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MACjC;IACF,CAAC;;IAED;IACAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEP,kBAAkB,CAAC;;IAE3D;IACAE,cAAc,CAACM,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;;IAE9C;IACA,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,cAAc,EAAET,kBAAkB,CAAC;MAC9DE,cAAc,CAACG,UAAU,CAAC,cAAc,CAAC;IAC3C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AAER,CAAC;AAACN,EAAA,CAxBID,gBAAgB;AA0BtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}